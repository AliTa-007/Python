Bunlari ogrenirken acik bir shell veya interpreterdan kendiniz yazin derim.


# Toplama +
print(5 + 5)
# Output: 10

# Cikartma -
print(10 - 5)
# Output: 5

# Carpma *
print(5 * 10)
# Output: 150

# ustlu sayilar **
print(10 ** 3)
# Output: 1000

# Bolme /
print(10 / 5)
# Output: 2

# kalansiz bolme //
print(14 // 5)
# Output: 2

# kalani bulma %
print(13 % 5)
# Output: 3




# x'e bir deger belirlemek
x = 5

# Print x
print(x)
# Output: 5

# Sayi olabilecegi 'x' gibi string, float, boolean, list, 2-D list olabilir.

# Bu sefer x string olsun
x = "testing"

# tek ' veya cift " tirnak pek farketmiyor

type()
# x'in turunu ogrenmek icin kullanilan komut 
# Print the type of x
print(type(x))
# Output: <class 'str'>




# kullanicinin bir yanitini almak
# parantezini icine sormak istediginiz soruyu yaz
Ali = input("tek oturusta kac tane domates yiyebilirsin?")
Ahmet = input("tek oturusta kac tane domates yiyebilirsin?")

# input her zaman string tir
# x'in turunu degistirebilirsin
# bazen print kullanirken x int oldugu icin hata verir bazen de aldigin inputla hesaplama yapmak istersin
toplam_domates = int(Ali) + int(Ahmet)
print("Ali ve Ahmet birlikte " + str(toplam_domates) + " yediler")
print("Ali ve Ahmet birlikte ", str(toplam_domates), " yediler")
# ayni isi gorur fakat , kendi boslugunu koyar. 



# her kelimenin nasil harfleri oluyorsa her listin kelime, harf, sayi, booleanlari ve hatta baska listeleri de olabilir
# list olusturmak
my_list = ["ali", "1", "True", "t"]

# Print the list
print(my_list)
# Output: ['ali', '1', 'True', 't']

# list olustur
my_list = ["Learning", "Python", "is", "fun!"]
# Output: ['Learning', 'Python', 'is', 'fun!']

# Print the first element of my_list
print(my_list[0])
# Output: ['Learning']

# Print the last element of my_list
print(my_list[-1])
# Output: ['fun!']

# Print the first two elements of my_list
print(my_list[0:2])
# Output: ['Learning', 'Python']

#bunlar stringler icinde aynen gecerli
